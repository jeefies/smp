" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing archlinux.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.
runtime! archlinux.vim

" If you prefer the old-style vim functionalty, add 'runtime! vimrc_example.vim'
" Or better yet, read /usr/share/vim/vim80/vimrc_example.vim or the vim manual
" and configure vim to your own liking!

" do not load defaults if ~/.vimrc is missing
"let skip_defaults_vim=1
set cursorline " highlight current line
set cursorcolumn
set nu

" tab 缩进
set tabstop=4 " 设置Tab长度为4空格
set shiftwidth=4 " 设置自动缩进长度为4空格
set autoindent " 继承前一行的缩进方式，适用于多行注释


syntax enable
syntax on
filetype plugin indent on

nmap gp "+p
nmap gy "+y
nmap gd "+d

xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

nmap tn :tabnew<CR>

" for nerd tree use
map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>

" auto open when no file choosen
autocmd vimenter * if !argc()|NERDTree|endif
let NERDTreeIgnore = ['\.pyc$', '^__pycache__$']  " 过滤所有.pyc文件不显示
let g:NERDTreeShowLineNumbers=1  " 是否显示行号
let g:NERDTreeHidden=0     "不显示隐藏文件
"Making it prettier
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
" Open the existing NERDTree on each new tab.
autocmd BufWinEnter * if getcmdwintype() == '' | silent NERDTreeMirror | endif

let g:snipMate = { 'snippet_version' : 1 }

" curl -fLo /usr/share/vim/vim82/autoload/plug.vim --create-dirs https://ghproxy.com/raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
call plug#begin('/usr/share/vim/vim82/plugged')

Plug 'https://github.com/junegunn/vim-easy-align.git'

Plug 'https://github.com/preservim/nerdtree.git'

Plug 'https://github.com/jistr/vim-nerdtree-tabs.git'

Plug 'https://github.com/Xuyuanp/nerdtree-git-plugin.git'

Plug 'https://github.com/jiangmiao/auto-pairs.git'

Plug 'https://github.com/vim-airline/vim-airline.git'

"Plug 'ianva/vim-youdao-translater'

"Plug 'https://github.com/vim-scripts/SuperTab.git'
"Plug 'https://github.com/vim-scripts/taglist.vim'
"
Plug 'https://github.com/marcweber/vim-addon-mw-utils'
Plug 'https://github.com/tomtom/tlib_vim'
Plug 'https://github.com/garbas/vim-snipmate'
Plug 'https://github.com/jeefies/vim-snippets'

"Plug 'airblade/vim-gitgutter'

Plug 'https://github.com/acarapetis/vim-colors-github.git'
Plug 'https://github.com/rakr/vim-one.git'
Plug 'https://github.com/jacoborus/tender.vim.git'

call plug#end()

let light_time = 9
let dark_time = 20
set background=dark
colorscheme tender

let current_hour = system("date +%H")
if v:shell_error == 0
	if current_hour > light_time 
		if current_hour < dark_time
			set background=light
			colorscheme one
		endif
	endif
endif

" Map F5 running!
map <F5> :call RunCompile()<CR>

func! RunCompile()
	exec "w"
	if &filetype == 'tcl'
		exec "!tclsh %"
	endif
	if &filetype == 'c'
		exec "!gcc % -o %< -Wall -Wextra -lm -g; ./%<"
	endif
	if &filetype == 'cpp'
		exec "!g++ % -o %< -Wall -Wextra -lm -g; ./%<"
	endif
	if &filetype == 'go'
		exec "!go run %"
	endif
	if &filetype == 'rust'
		exec "!rustc %; ./%<"
	endif
	if &filetype == 'd'
		exec "!ldc2 %; ./%<"
	endif
endfunc

map <F2> :!cat %<CR>

"au VimEnter * !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'
"au VimLeave * !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Caps_Lock'
